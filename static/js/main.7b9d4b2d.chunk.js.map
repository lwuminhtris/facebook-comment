{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","val","setVal","handleJson","a","post_id","slice","lastIndexOf","url","fetch","then","res","json","data","blob","Blob","JSON","stringify","type","anchor","document","createElement","download","href","window","webkitURL","URL","createObjectURL","dataset","downloadurl","join","click","className","rel","style","fontFamily","color","width","whiteSpace","backgroundColor","fontSize","marginTop","marginBottom","onChange","e","target","value","marginLeft","top","onClick","open","focus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qQAkFeA,MA9Ef,WACE,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAQMC,EAAU,uCAAG,8BAAAC,EAAA,6DACXC,EAAUJ,EAAIK,MAAML,EAAIM,YAAY,KAAO,GAC3CC,EAFW,wDAE4CH,EAF5C,kBAGXI,MAAMD,GACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUJ,IAAQ,CAAEK,KAAM,eAClDC,EAASC,SAASC,cAAc,KAElCF,EAAOG,SAAW,eAClBH,EAAOI,MAAQC,OAAOC,WAAaD,OAAOE,KAAKC,gBAAgBb,GAC/DK,EAAOS,QAAQC,YAAc,CAAC,aAAcV,EAAOG,SAAUH,EAAOI,MAAMO,KAAK,KAC/EX,EAAOY,WAZM,2CAAH,qDAgBhB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAM,eAAa,gBAAgB,cAAY,QAAQC,IAAI,aAAaV,KAAK,sEAC7E,sBAAKW,MAAO,CACVC,WAAY,YACZC,MAAO,QACPC,MAAO,OACPC,WAAY,MACZC,gBAAiB,UACjBC,SAAU,GACVC,WAAY,IACZC,aAAc,IARhB,UAUE,oHACA,4HACA,wHACA,6HAEA,gGAAiC,mBAAGR,MAAO,CAAEE,MAAO,OAAnB,yBAAjC,kGAfF,4CAkBA,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,uBAAOA,UAAU,wBAAwBW,SAAU,SAACC,GAAD,OAAO1C,EAAO0C,EAAEC,OAAOC,UAC1E,wBACEd,UAAU,eACVE,MAAO,CACLa,WAAY,WACZC,KAAM,GAERC,QArDM,WAChB,IAAM5C,EAAUJ,EAAIK,MAAML,EAAIM,YAAY,KAAO,GAC3CC,EAAG,wDAAoDH,EAApD,QACTmB,OAAO0B,KAAK1C,GAAK2C,SA4CT,iCAUA,wBACEnB,UAAU,eACVE,MAAO,CAELc,KAAM,GAERC,QAAS9C,EANX,2CCpDGiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BX,M","file":"static/js/main.7b9d4b2d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [val, setVal] = useState('');\n\n  const handleCsv = () => {\n    const post_id = val.slice(val.lastIndexOf('/') + 1,);\n    const url = `https://wkrix-comment-collector.herokuapp.com/${post_id}/csv`;\n    window.open(url).focus();\n  }\n\n  const handleJson = async () => {\n    const post_id = val.slice(val.lastIndexOf('/') + 1,);\n    const url = `https://wkrix-comment-collector.herokuapp.com/${post_id}/json`;\n    await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        let blob = new Blob([JSON.stringify(data)], { type: 'text/plain' }),\n          anchor = document.createElement('a');\n\n        anchor.download = \"comments.txt\";\n        anchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\n        anchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');\n        anchor.click();\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-body\">\n        <link data-require=\"bootstrap-css\" data-semver=\"3.3.6\" rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.css\" />\n        <div style={{\n          fontFamily: 'monospace',\n          color: 'white',\n          width: 'auto',\n          whiteSpace: 'pre',\n          backgroundColor: '#282c34',\n          fontSize: 14,\n          marginTop: -250,\n          marginBottom: 50,\n        }}>\n          <p> ___ ___  __  __ __  __ ___ _  _ _____    ___ ___  _    _    ___ ___ _____ ___  ___</p>\n          <p>/ __/ _ \\|  \\/  |  \\/  | __| \\| |_   _|  / __/ _ \\| |  | |  | __/ __|_   _/ _ \\| _ \\</p>\n          <p>| (_| (_) | |\\/| | |\\/| | _|| .` | | |   | (_| (_) | |__| |__| _| (__  | || (_) |   /</p>\n          <p>\\___\\___/|_|  |_|_|  |_|___|_|\\_| |_|    \\___\\___/|____|____|___\\___| |_| \\___/|_|_\\</p>\n\n          <p>LƯU Ý: Tool chỉ hoạt động với <b style={{ color: 'red' }}>public post</b> (chẳng hạn như https://www.facebook.com/weibovietnam/posts/4862365597146758)</p>\n          developed by @_lmtri with ❤️\n        </div>\n        <div className=\"input-bar\">\n          <div className=\"input-bar-item width100\">\n            <input className=\"form-control width100\" onChange={(e) => setVal(e.target.value)} />\n            <button\n              className=\"btn btn-info\"\n              style={{\n                marginLeft: '-49.5rem',\n                top: -1,\n              }}\n              onClick={handleCsv}\n            >\n              Tải file excel\n            </button>\n            <button\n              className=\"btn btn-info\"\n              style={{\n                // marginLeft: '-10rem',\n                top: -1,\n              }}\n              onClick={handleJson}\n            >\n              Tải file json\n            </button>\n          </div>\n        </div >\n\n      </div >\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}